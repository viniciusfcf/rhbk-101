kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      volumes:
        - name: keycloak-tls-certificates
          secret:
            secretName: example-tls-secret
            defaultMode: 420
            optional: false
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 250
          terminationMessagePath: /dev/termination-log
          name: keycloak
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 20
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 150
          env:
            - name: KC_HOSTNAME
              value: keycloak-rhbk9.apps.cluster-vqgg6.dynamic.opentlc.com
            - name: KC_HTTP_PORT
              value: '8080'
            - name: KC_HTTPS_PORT
              value: '8443'
            - name: KC_HTTPS_CERTIFICATE_FILE
              value: /mnt/certificates/tls.crt
            - name: KC_HTTPS_CERTIFICATE_KEY_FILE
              value: /mnt/certificates/tls.key
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              value: postgres
            - name: KC_DB_PASSWORD
              value: testpassword
            - name: KC_DB_URL_HOST
              value: postgres-db
            - name: KC_HEALTH_ENABLED
              value: 'true'
            - name: KC_CACHE
              value: ispn
            - name: KC_CACHE_STACK
              value: kubernetes
            - name: KC_PROXY
              value: passthrough
            - name: KEYCLOAK_ADMIN
              value: admin
            - name: KEYCLOAK_ADMIN_PASSWORD
              value: admin
            - name: jgroups.dns.query
              value: keycloak-discovery.rhbk9
          ports:
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: keycloak-tls-certificates
              mountPath: /mnt/certificates
          terminationMessagePolicy: File
          image: >-
            registry.redhat.io/rhbk/keycloak-rhel9@sha256:167d58278da388ef82a993e1396389bf2c614b75475ccefbc8050b18221f0a36
          args:
            - start
      restartPolicy: Always
  serviceName: ''
  podManagementPolicy: OrderedReady
  revisionHistoryLimit: 10
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
---
kind: Service
apiVersion: v1
metadata:
  name: keycloak-discovery
  labels:
    app: keycloak
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ipFamilies:
    - IPv4
  ports:
    - protocol: TCP
      port: 7800
      targetPort: 7800
  internalTrafficPolicy: Cluster
  clusterIPs:
    - None
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: keycloak
---
kind: Service
apiVersion: v1
metadata:
  name: keycloak-service
  labels:
    app: keycloak
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: https
      protocol: TCP
      port: 8443
      targetPort: 8443
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    app: keycloak
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    route.openshift.io/termination: passthrough
  name: keycloak-ingress-77jpd
  labels:
    app: keycloak
spec:
  host: keycloak-rhbk9.apps.cluster-vqgg6.dynamic.opentlc.com
  to:
    kind: Service
    name: keycloak-service
    weight: 100
  port:
    targetPort: https
  tls:
    termination: passthrough
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
